apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: {{ .Values.name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
{{- if .Values.e2eTestJob.enabled }}
      post:
        failurePolicy: Ignore
        execNewPod:
          containerName: {{ .Values.name }}
          command:
          - curl
          - "-X"
          - "POST"
          - "-H"
          - "Accept: application/vnd.github.v3+json"
          - "-H"
          - "Authorization: token $(GITHUB_TOKEN)"
          - "-d"
          - "{ \"ref\": \"$(GITHUB_ACTION_REF)\", \"inputs\": { \"cypressTag\": \"lodestar-frontend\" } }"
          - "$(GITHUB_API_URL)"
          env:
          - name: GITHUB_API_URL
            valueFrom:
              secretKeyRef:
                key: GITHUB_API_URL
                name: e2e-secret
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                key: GITHUB_TOKEN
                name: e2e-secret
          - name: GITHUB_ACTION_REF
            valueFrom:
              secretKeyRef:
                key: GITHUB_ACTION_REF
                name: e2e-secret
{{- end }}
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        deploymentconfig: {{ .Values.name }}
    spec:
      containers:
      - env:
        - name: LODESTAR_FRONTEND_GIT_TAG
          value: {{ .Values.imageTag }}
        image: {{ .Values.name }}:{{ .Values.imageTag }}
        imagePullPolicy: Always
        name: {{ .Values.name }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: config-volume
          {{- if .Values.development }}
          mountPath: /var/www/html/config
          {{- else }}
          mountPath: /opt/app-root/src/config
          {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: frontend-config
  triggers: 
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      from:
        kind: ImageStreamTag
        name: {{ .Values.name }}:{{ .Values.imageTag }}
      containerNames:
      - {{ .Values.name }}
